class Solution {

    public void helper(int[] candidates, int target, List<List<Integer>> ans, List<Integer> list, int sum, int start){
        int n = candidates.length;
        if(sum == target){
            ans.add(new ArrayList<>(list));
            return;
        }

        if (sum > target) return; 

        for(int i=start;i<n;i++){
            list.add(candidates[i]);
            helper(candidates,target,ans,list,sum+candidates[i], i);
            list.remove(list.size() -1);
        }
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();

        helper(candidates, target, ans , list,  0 , 0);
        return ans;
    }
}
