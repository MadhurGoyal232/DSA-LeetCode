class Solution {
    public int subarraySum(int[] nums, int k) {
        // int count =0;
        // int sum = 0;
        // for(int i=0;i<nums.length;i++){
        //     sum = 0;
        //     int j = i;
        //     while(i!= nums.length && i<=j && j<nums.length){
        //         sum+= nums[j];
        //         if(sum == k){
        //             count++;
        //             // break;
        //         }
        //         // if(sum>k){
        //         //     break;
        //         // }
        //         j++;
        //     }
        // }
        // return count;

        int sum = 0;
        int count = 0;
        HashMap<Integer,Integer> map = new HashMap<>();

        map.put(0,1);

        for(int num:nums){

            sum+= num;
            if(map.containsKey(sum-k)){
                count+= map.get(sum-k);
            }
            if (map.containsKey(sum)) {
                map.put(sum, map.get(sum) + 1);
            } else {
                map.put(sum, 1);
            }
            
        }
        return count;
    }
}
