First is through Hash set we see if that contains already,
second method is through slow and fast pointer, we see if they are equal.

class Solution {
    public boolean isHappy(int n) {

        Set<Integer> usedIntegers = new HashSet<>();
        while(true){

            int sum = 0;

            while(n>0){

            int rem = n%10;
            sum+= rem * rem;
            n/= 10;
                    }

        if(sum == 1){
            return true;
        }

        n = sum;

        if(usedIntegers.contains(n))

            return false;
        usedIntegers.add(n);
        }
    }
}



// class Solution {
//     public boolean isHappy(int n) {

//         int slow = n;
//         int fast = n;

//         do{
//             slow = findSquare(slow);
//             fast = findSquare(findSquare(fast));
//         }while(slow!= fast);

//         if (slow == 1){
//             return true;
//         }
//         return false;
//     }

//     private int findSquare(int number){

//         int ans = 0;
//         while(number>0){

//             int rem = number%10;
//             ans+= rem * rem;
//             number/= 10;
//         }
//         return ans;
//     }
// }
