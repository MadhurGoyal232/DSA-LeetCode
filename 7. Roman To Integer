class Solution {
    public int romanToInt(String s) {
        char[] newArr = s.toCharArray();
        int count = 0; 
        for (int i = 0; i < newArr.length; i++) {
            // Ensure i+1 is within bounds before accessing it
            if (i + 1 < newArr.length && newArr[i] == 'I' && newArr[i+1] ==  'V') {
                count += 4;
                i++; // Skip the next character
            } else if (i + 1 < newArr.length && newArr[i] == 'I' && newArr[i+1] == 'X') {
                count += 9;
                i++;
            } else if (i + 1 < newArr.length && newArr[i] == 'X' && newArr[i+1] == 'L') {
                count += 40;
                i++;
            } else if (i + 1 < newArr.length && newArr[i] == 'X' && newArr[i+1] == 'C') {
                count += 90;
                i++;
            } else if (i + 1 < newArr.length && newArr[i] == 'C' && newArr[i+1] == 'D') {
                count += 400;
                i++;
            } else if (i + 1 < newArr.length && newArr[i] == 'C' && newArr[i+1] == 'M') {
                count += 900;
                i++;
            } else {
                // Handle single Roman numerals
                if (newArr[i] == 'I') {
                    count += 1;
                } else if (newArr[i] == 'V') {
                    count += 5;
                } else if (newArr[i] == 'X') {
                    count += 10;
                } else if (newArr[i] == 'L') {
                    count += 50;
                } else if (newArr[i] == 'C') {
                    count += 100;
                } else if (newArr[i] == 'D') {
                    count += 500;
                } else if (newArr[i] == 'M') {
                    count += 1000;
                }
            }
        }
        return count;
    }
}
