class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<>();
        if (root == null) return result;

        helper(root, "", result);
        return result;
    }

    private void helper(TreeNode node, String path, List<String> result) {
        if (node == null) return;

        // Build current path
        if (path.isEmpty()) {
            path = String.valueOf(node.val);
        } else {
            path += "->" + node.val;
        }

        // If it's a leaf, add the full path to the list
        if (node.left == null && node.right == null) {
            result.add(path);
            return;
        }

        // Recurse for both children
        helper(node.left, path, result);
        helper(node.right, path, result);
    }
}
