/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();

        if(root == null){
            return 0;
        }

        queue.offer(root);

        int count = 1;
        int res = 0;
        while(!queue.isEmpty()){

            int size = queue.size();
            

            for(int i=0;i<size;i++){
                TreeNode cur = queue.poll();
                if(cur.left!= null){
                    queue.offer(cur.left);
                }
                if(cur.right!= null){
                    queue.offer(cur.right);
                }

                if(cur.left == null && cur.right == null){
                    res = 1;
                    break;
                }

            }
            if(res == 1){
                return count;
            }
            count++;
        }
        return count;
    }
}
