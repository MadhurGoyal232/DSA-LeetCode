// class Solution {
//     public int numberOfSubstrings(String s) {
//         int count = 0;

//         String str = "abc";
//         for(int i = 0;i<s.length()-2;i++){
//             for(int j=i+2;j<s.length();j++){

//                 String st = s.substring(i,j+1);
//                 if(st.indexOf('a')!= -1 && st.indexOf('b')!= -1 && st.indexOf('c')!= -1){
//                     count++;
//                 }
//                 if(j == s.length()-1 ){
//                     break;
//                 }
//             }
//         } 

//         return count;
//     }
// }



// class Solution {
//      public int numberOfSubstrings(String s) {
//         int count = 0;

//         for(int i=0;i< s.length()-2;i++){

//             int j = i+2;

//             String st =s.substring(i,j);
//             if(st.indexOf('a')!= -1 && st.indexOf('b')!= -1 && st.indexOf('c')!= -1){

//                 count = count+ s.length()- j;               

//             }
//             else{
//                 j++;
//             }

//             if(j==s.length()-1){
//                 break;
//             }

//         }

//         return count;
//     }
// }

// class Solution {
//      public int numberOfSubstrings(String s) {
//         int count = 0;
//         int i = 0;
//         int j = i+2;

//         while(i<s.length()-2){

//             System.out.print(i + " || " + j+1);
//             String st =s.substring(i,j+1);
//             if(st.indexOf('a')!= -1 && st.indexOf('b')!= -1 && st.indexOf('c')!= -1){

//                 count = count+ s.length()- j; 
//                 i++;
//                 // if(i==s.length()-3 && j == s.length() - 1){
//                 //     break;
//                 // }
//                 j++;

//             }
//             else{
//                 j++;
//             }

//             // if(j==s.length()-1){
//             //     i++;
//             // }

//         }

//         return count;
//     }

// }


class Solution {
    public int numberOfSubstrings(String s) {
        int count = 0;
        int[] freq = {0, 0, 0};
        int left = 0;
        
        for (int right = 0; right < s.length(); right++) {
            freq[s.charAt(right) - 'a']++; 
            
            while (freq[0] > 0 && freq[1] > 0 && freq[2] > 0) {
                count += s.length() - right; 
                freq[s.charAt(left) - 'a']--; 
                left++; 
            }
        }
        
        return count;
    }
}



